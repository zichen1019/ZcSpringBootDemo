#端口号
server:
  #开发环境
  port: 9091
  #生产环境
  #port: 8080
  servlet:
    context-path: /zc
    session:
      timeout: 30M

spring:
  # 此处AOP配置，是druid的Spring监控所需要
  aop:
    auto: true
    proxy-target-class: true
  datasource:
    druid:
      # 连接池公用条件
      # 是否启用druid可视化界面.
      stat-view-servlet:
        url-pattern: /druid/* # 可视化界面访问地址为：IP地址:端口号/server.servlet.context-path/当前url-pattern/index.html 例如：127.0.0.1:9091/zc/druid/index.html
        # 登录查看信息的账号密码.
        login-username: administrator
        login-password: zc-admin
        enabled: true
        # 是否能够重置数据.
        reset-enable: false
        # 白名单 (多个IP英文逗号隔开)
        allow:
        # IP黑名单 (存在共同时，deny优先于allow) : 如果满足deny的话提示:Sorry, you are not permitted to view this page.
        deny:
      # druid过滤器
      web-stat-filter:
        exclusions: .js,.gif,.jpg,.png,.css,.ico,/druid/*
        session-stat-enable: true
        session-stat-max-count: 100
        enabled: true
        # 配置profileEnable能够监控单个url调用的sql列表
        profile-enable: true
      #
      asyncInit: true
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20

      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
      filters:
        commons-log.connection-logger-name: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      # useGlobalDataSourceStat: true

      # 1.1.10版本的druid配置filter：配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      #filters: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      #connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: com.zc.controller.*,com.zc.service.*,com.zc.service.*.*,com.zc.mapper.*.*

      type: com.alibaba.druid.pool.DruidDataSource
      # 当连接池空闲时间超过8小时，数据库连接就会自动断掉，为了避免这种情况，还需要在yml文件下加入如下配置
      max-idle: 10
      max-wait: 10000
      min-idle: 5
      initial-size: 5
      validation-query: SELECT 1
      test-on-borrow: false
      test-while-idle: true
      time-between-eviction-runs-millis: 18800
      # 默认数据库
      primary:
        #   济南正式数据库
        url: jdbc:mysql://127.0.0.1:3309/sbdemo1?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: root
        password: root
        driver-class-name: com.mysql.jdbc.Driver

      # 自定义数据库
      secondary:
        #  济南本地 mysql8
        url: jdbc:mysql://127.0.0.1:3306/sbdemo1?useSSL=FALSE&serverTimezone=CTT
        jdbc-url: jdbc:mysql://127.0.0.1:3306/sbdemo1?useSSL=FALSE&serverTimezone=CTT
        username: root
        password: root


#     测试数据库
#     url: jdbc:mysql://127.0.0.1:3306/sbdemo1?useSSL=FALSE&serverTimezone=UTC
#     jdbc-url: jdbc:mysql://127.0.0.1:3306/sbdemo1?useSSL=FALSE&serverTimezone=UTC
#     username: root
#     password: root
#     driver-class-name: com.mysql.cj.jdbc.Driver

     ###################以下为druid增加的配置###########################
#      type: com.alibaba.druid.pool.DruidDataSource
#      # 下面为连接池的补充设置，应用到上面所有数据源中
#      # 初始化大小，最小，最大
#      initialSize: 5
#      minIdle: 5
#      maxActive: 20
#      # 配置获取连接等待超时的时间
#      maxWait: 60000
#      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#      timeBetweenEvictionRunsMillis: 60000
#      # 配置一个连接在池中最小生存的时间，单位是毫秒
#      minEvictableIdleTimeMillis: 300000
#      validationQuery: SELECT 1 FROM DUAL
#      testWhileIdle: true
#      testOnBorrow: false
#      testOnReturn: false
#      # 打开PSCache，并且指定每个连接上PSCache的大小
#      poolPreparedStatements: true
#      maxPoolPreparedStatementPerConnectionSize: 20

#      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
#      filters:
#        commons-log.connection-logger-name: stat,wall,log4j
#      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#      # 合并多个DruidDataSource的监控数据

#      # 1.1.10版本的druid配置filter：配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#      filters: stat,wall,log4j
#      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#      # 合并多个DruidDataSource的监控数据
#      useGlobalDataSourceStat: true




#mybatis扫描路径
#mybatis:
#  type-aliases-package: com.demo.zc.mapper.*
#  mapper-locations: classpath:mapper-xml/*/*.xml
# 打印sql
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 打印sql
# 打印sql 方法二
#  logging:
#    level:
#      io.prong.oauth.service.dao: classpath:mapper-xml/*/*.xml

# 通用mapper
mapper:
  mappers: com.zc.conf.ConfigMapper # 我的通用Mapper接口，MyMapper<T> extends Mapper<T>, MysqlMapper<T> ,mapper接口要继承MyMapper<当前mapper中的实体类>
  IDENTITY: MYSQL # 取回主键的方式，可以配置的值是数据库类型
  not-Empty: true # insertSelective 和 updateByPrimaryKeySelective 中，是否判断字符串类型 !=''
  enableMethodAnnotation: true # 是否支持（getter 和 setter）在方法上使用注解

# 分页工具
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

# 日志打印
logging:
  level:
    com.demo.zc.mapper: trace # 打印sql
#    root: info
#    tk.mybatis: trace